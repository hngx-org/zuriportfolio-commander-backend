{
  "openapi": "3.0.0",
  "info": {
    "title": "Zuriportfolio Shop API",
    "description": "Zuriportfolio shop internal / external api.",
    "version": "0.1.9"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api",
      "description": "Zuriportfolio shop internal / external api."
    },
    {
      "url": "https://zuriportfolio-shop-internal-api.onrender.com/api",
      "description": "Production server"
    },
    {
      "url": "https://auth.akuya.tech/api/",
      "description": "Authentication server"
    }
  ],

  "paths": {
    "/products": {
      "get": {
        "tags": ["Product"],
        "summary": "Fetch all products",
        "description": "",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProduct"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/product/add": {
      "post": {
        "tags": ["Product"],
        "summary": "Create a new Product",
        "description": "",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddProduct"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/product/categories": {
      "get": {
        "summary": "Retrieve Product Categories",
        "description": "Get a list of all product categories along with their subcategories.",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 11,
                    "name": "Electronics",
                    "product_id": "11",
                    "createdAt": "2023-10-11T21:25:23.0000Z",
  
                    "sub_categories": [
                      {
                        "id": 101,
                        "name": "Smartphones",
                        "parent_category_id": 1011,
                        "createdAt": "2023-10-11T21:25:23.0000Z"
                      }
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/product/{product_id}": {
      "delete": {
        "tags": ["Product"],
        "summary": "Delete a product",
        "description": "Delete a specific product.",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Action authorized successfully."
          },
          "400": {
            "description": "Bad request. Please check the request parameters."
          },
          "401": {
            "description": "Unauthorized. Token is invalid or action is not permitted."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/product/createcategories": {
      "post": {
        "tags": ["Product"],
        "summary": "Create a product category",
        "description": "Create a parent or subcategory.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategory"
              },
              "example": {
                "name": "Software Enginering",
                "parent_id": null
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                },
                "example": {
                  "parentCategory": {
                    "$ref": "#/components/schemas/ProductCategory"
                  },
                  "subCategory": {
                    "$ref": "#/components/schemas/ProductSubCategory"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Please check the request parameters."
          },
          "401": {
            "description": "Unauthorized. Token is invalid or action is not permitted."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/discount": {
      "post": {
        "summary": "Create a discount",
        "tags": ["Discount"],
        "requestBody": {
          "description": "Discount data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "discount_type": {
                    "type": "string",
                    "description": "Type of discount",
                    "required": true
                  },
                  "amount": {
                    "type": "number",
                    "description": "Discount amount",
                    "required": true
                  },
                  "quantity": {
                    "type": "number",
                    "description": "Minimum quantity for the discount",
                    "minimum": 1,
                    "required": true
                  },
                  "maximum_discount_price": {
                    "type": "number",
                    "description": "Maximum discount price",
                    "required": false
                  },
                  "product_ids": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Product ID with a custom UUID pattern",
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "valid-uuid",
                      "required": true
                    },
                    "description": "Array of product IDs",
                    "required": true
                  },
                  "valid_from": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Start date and time of discount",
                    "required": true
                  },
                  "valid_to": {
                    "type": "string",
                    "format": "date-time",
                    "description": "End date and time of discount",
                    "required": true
                  }
                }
              }
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
        },
        "responses": {
          "201": {
            "description": "Discount created successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/shop": {
      "post": {
        "summary": "Create a shop",
        "tags": ["Shop"],
        "requestBody": {
          "description": "Shop data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "shop name",
                    "required": true
                  }
                }
              }
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
        },
        "responses": {
          "201": {
            "description": "Shop created successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User Signup",
        "description": "Allows a user to sign up.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "sicoj92691@elixirsd.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "myPassword2021"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully signed up."
          },
          "400": {
            "description": "Bad request. Please check the request parameters."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User Login",
        "description": "Allows a user to log in.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "sicoj92691@elixirsd.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "myPassword2021"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in."
          },
          "401": {
            "description": "Unauthorized. Incorrect email or password."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/auth/verify-email": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Verify Email",
        "description": "Handles the verification and confirmation of the authenticity of a user's email address.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "format": "uuid",
                    "example": "42e2a46a-e56f-4e4d-be0e-0675b7026f58"
                  }
                },
                "required": ["token"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verification successful."
          },
          "400": {
            "description": "Bad request. Please check the request parameters."
          },
          "401": {
            "description": "Unauthorized. Token is invalid or has expired."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/auth/send-verification": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Send Verification Code",
        "description": "Sends a verification code to the user's email for account activation.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "example": "John"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "username": {
                    "type": "string",
                    "example": "johndoe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "sicoj92691@elixirsd.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "myPassword2021"
                  },
                  "refresh_token": {
                    "type": "string",
                    "format": "uuid",
                    "example": "42e2a46a-e56f-4e4d-be0e-0675b7026f58"
                  }
                },
                "required": ["first_name", "last_name", "username", "email", "password", "refresh_token"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification code sent successfully."
          },
          "400": {
            "description": "Bad request. Please check the request parameters."
          },
          "401": {
            "description": "Unauthorized. Refresh token is invalid or has expired."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/auth/confirm-verification": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Confirm Verification Code",
        "description": "Verifies the verification code against the stored code for the user in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "sicoj92691@elixirsd.com"
                  },
                  "verificationCode": {
                    "type": "string",
                    "example": "3903"
                  }
                },
                "required": ["email", "verificationCode"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification code confirmed successfully."
          },
          "400": {
            "description": "Bad request. Please check the request parameters."
          },
          "401": {
            "description": "Unauthorized. Verification code is invalid or has expired."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/authorize": {
      "post": {
        "tags": ["Authorization"],
        "summary": "Authorize Action",
        "description": "Authorizes an action based on the provided token and action type.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjJlNzU3N2ZhLWMyZWItNDVmNS1iZTZlLWM2ZD9zZGZjNmI1NyIsImlhdCI6MTY5NzAxNzkwOH0.FvN-FQwPUY5sLHNqGh7DhhAC_CxtIjKqbSaFwXebsoU"
                  },
                  "action": {
                    "type": "string",
                    "enum": ["permissions", "use coupon"],
                    "example": "use coupon"
                  }
                },
                "required": ["token", "action"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Action authorized successfully."
          },
          "400": {
            "description": "Bad request. Please check the request parameters."
          },
          "401": {
            "description": "Unauthorized. Token is invalid or action is not permitted."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/orders/search/{name}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Search Order By Product Name",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Product name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/searchOrder"
                },
                "example": [
                  {
                    "id": "1001",
                    "order_id": "1122",
                    "product_id": "1010",
                    "merchant_id": "1234",
                    "customer_id": "1234",
                    "order_price": 12.22,
                    "order_VAT": 12.22,
                    "order_discount": 11.11,
                    "promo_id": "1223",
                    "createdAt": "2023-10-11T18:00:52.000Z",
                    "updatedAt": "2023-10-11T18:00:52.000Z",
                    "productId": "1010",
                    "product": {
                      "id": "1010",
                      "user_id": "1234",
                      "shop_id": "1111",
                      "name": "Longchair",
                      "description": "This is a long chair",
                      "quantity": 2,
                      "price": 12.34,
                      "discount_price": 1.2,
                      "tax": 1.2,
                      "admin_status": "approved",
                      "is_published": false,
                      "is_deleted": "active",
                      "currency": "NGN",
                      "createdAt": "2023-10-11T17:52:28.827Z",
                      "updatedAt": "2023-10-11T17:52:28.827Z"
                    }
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized. Please provide an authenticated user."
          },
          "403": {
            "description": "Forbidden. Token is invalid or action is not permitted for provided user."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },  
    "/order/status/{order_id}": {
      "patch": {
        "tags": ["Order"],
        "summary": "Update Order Status",
        "description": "Update the status of a specific order.",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "Order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["pending", "complete", "failed"],
                    "example": "complete"
                  }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order status updated successfully."
          },
          "400": {
            "description": "Bad request. Please check the request parameters or status value."
          },
          "401": {
            "description": "Unauthorized. Token is invalid or action is not permitted."
          },
          "404": {
            "description": "Order not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AddProduct": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "format": "binary"
          },
          "userId": {
            "type": "string"
          },
          "shopId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "categoryId": {
            "type": "integer"
          },
          "price": {
            "type": "number"
          },
          "discountPrice": {
            "type": "number"
          },
          "tax": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          }
        },
        "required": [
          "image",
          "userId",
          "shopId",
          "name",
          "description",
          "quantity",
          "categoryId",
          "price",
          "discountPrice",
          "tax",
          "currency"
        ],
        "example": {
          "userId": "10372883-4ae7-4299-9759-706b3646e7ac",
          "shopId": "d001d16b-9b1b-4b69-b037-2344325466ea",
          "categoryId": 1,
          "name": "HNGX polo",
          "description": "Red",
          "quantity": 4,
          "price": 500,
          "discount_price": 455,
          "tax": 2.2,
          "currency": "USD"
        }
      },

      "GetProduct": {
        "type": "object",
        "properties": {}
      },
      "searchOrder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "order_id": {
            "type": "string"
          },
          "product_id": {
            "type": "string"
          },
          "merchant_id": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "order_price": {
            "type": "number",
            "format": "float"
          },
          "order_VAT": {
            "type": "number",
            "format": "float"
          },
          "order_discount": {
            "type": "number",
            "format": "float"
          },
          "promo_id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "productId": {
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/SearchProductData"
          }
        },"required": ["id", "order_id", "product_id", "order_price", "createdAt", "updatedAt", "productId", "product"]
      },
      "SearchProductData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "shop_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "discount_price": {
            "type": "number",
            "format": "float"
          },
          "tax": {
            "type": "number",
            "format": "float"
          },
          "admin_status": {
            "type": "string"
          },
          "is_published": {
            "type": "boolean"
          },
          "is_deleted": {
            "type": "string"
          },
          "currency": {
          "name": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "user_id", "shop_id", "name", "price", "createdAt", "updatedAt"]
      }
      },
      "ProductSubCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "parentCategory": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateCategory": {
        "type": "object",
        "properties": {
          "parent_id": {
            "type": ["integer", "null", "undefined", ""]
          },
          "name": {
            "type": "string"
          }
        },
        "required": ["name"]
      },
      "ProductCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CategoryResponse": {
        "type": "object",
        "property": {
          "parentCategory": {
            "$ref": "#/components/schemas/ProductCategory"
          },
          "subCategory": {
            "$ref": "#/components/schemas/ProductSubCategory"
          },
          "name": {
            "$ref": "#/components/schemas/CreateCategory/properties/name"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
